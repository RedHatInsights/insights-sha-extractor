plugins:
  packages:
    - ccx_messaging
    - insights.specs.default
    - insights_sha_extractor
    - pythonjsonlogger
    - pythonjsonlogger.jsonlogger
service:
  extract_timeout:
  extract_tmp_dir:
  format: insights.formats._json.JsonFormat
  target_components: []
  consumer:
    name: ccx_messaging.consumers.consumer.AnemicConsumer
    kwargs:
      incoming_topic: ${CDP_INCOMING_TOPIC:platform.upload.announce}
      group_id: ${CDP_GROUP_ID:insights_sha_extractor_app}
      bootstrap_servers: ${CDP_CONSUMER_SERVER:[10.34.129.172:9092]}
      platform_service: openshift
      processing_timeout_s: 0
      max_poll_records: 10
      max_poll_interval_ms: 600000
      heartbeat_interval_ms: 10000
      session_timeout_ms: 20000
      dead_letter_queue_topic: ${CDP_DEAD_LETTER_QUEUE_TOPIC:dead.letter.queue}
  downloader:
    name: ccx_messaging.downloaders.http_downloader.HTTPDownloader
    kwargs:
      max_archive_size: 100MiB
  engine:
    name: ccx_messaging.engines.sha_extractor_engine.SHAExtractorEngine
    kwargs:
      extract_timeout: 10
  publisher:
    name: ccx_messaging.publishers.sha_publisher.SHAPublisher
    kwargs:
      outgoing_topic: ${CDP_OUTGOING_TOPIC:archive-results}
      bootstrap_servers: ${CDP_PUBLISHER_SERVER:[10.34.129.172:9092]}
  watchers:
    - name: ccx_messaging.watchers.payload_tracker_watcher.PayloadTrackerWatcher
      kwargs:
        bootstrap_servers: mq-kafka:29092
        topic: platform.payload-status
    - name: ccx_messaging.watchers.stats_watcher.StatsWatcher
      kwargs:
        prometheus_port: 8000
    - name: ccx_messaging.watchers.cluster_id_watcher.ClusterIdWatcher

  logging:
    version: 1
    disable_existing_loggers: false
    handlers:
      default:
        level: DEBUG
        class: logging.StreamHandler
        stream: ext://sys.stdout
        formatter: json
        filters:
          - context_filter
      logstash:
        level: INFO
        class: logstash.TCPLogstashHandler
        host: "127.0.0.1"
        port: 5000
        version: 1
    formatters:
      brief:
        format: "%(message)s"
      json:
        (): "pythonjsonlogger.jsonlogger.JsonFormatter"
        format: "%(filename)s %(lineno)d %(process)d %(levelname)s %(asctime)s %(name)s %(message)s"
      cloudwatch:
        format: "%(filename)s %(levelname)s %(asctime)s %(name)s %(hostname)s %(mac_address)s %(message)s"
    filters:
      context_filter:
        (): "insights_sha_extractor.log_filter.LogFilter"
    root:
      handlers:
        - default
        - logstash
    loggers:
      insights_messaging:
        level: DEBUG
      ccx_messaging:
        level: DEBUG
      insights:
        level: WARNING
      insights_sha_extractor:
        level: DEBUG
